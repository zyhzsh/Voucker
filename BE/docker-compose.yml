version: '3.9'
services:
  voucher_service:
    container_name: voucher_service
    build:
      context: .
      dockerfile: ./apps/voucher/Dockerfile
      target: development
    env_file:
      - ./apps/voucher/.env.local.dev
    command: npm run start:dev voucher
    depends_on:
      - test_database
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '4000:3000'
  store_service:
    container_name: store_service
    build:
      context: .
      dockerfile: ./apps/store/Dockerfile
      target: development
    env_file:
      - ./apps/store/.env.local.dev
    command: npm run start:dev store

    depends_on:
      - test_database
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '4001:3000'
  rabbitmq:
    container_name: event_bus
    image: rabbitmq
    ports:
      - '5672:5672'
  test_database:
    container_name: test_database
    image: postgres
    restart: always
    ports:
      - '5432:5432'
    volumes:
      - ./test_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=root
  nginx_load_balancer:
    container_name: loader_balancer
    image: nginx
    volumes:
      - ./nginx/default.conf:/etc/nginx/nginx.conf
    ports:
      - '80:80'
