name: Category Service CI/CD - gcp
on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  #  GAR_LOCATION: europe
  GKE_CLUSTER: autopilot-cluster-voucker-platform
  GKE_ZONE: europe-west1
  DEPLOYMENT_NAME: github_action_automation_deployment_category_service_api
  IMAGE: category-service-api
  # TAG: 0.0.1

jobs:
  setup-build-publish-deploy:
    name: Set up Build Publish Deploy
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: 'read'
      id-token: 'write'

    defaults:
      run:
        working-directory: './BE'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      - name: Configure Docker
        run: |-
          gcloud --quiet auth configure-docker

      - name: GKE set up
        uses: google-github-actions/get-gke-credentials@v0.2.1
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: './BE/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Build Testing
        run: npm run build category --if-present

      - name: Build Docker Image
        run: |-
          docker build \
           --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
           --build-arg GITHUB_SHA="$GITHUB_SHA" \
           --build-arg GITHUB_REF="$GITHUB_REF" \
           -f ./apps/category/Dockerfile .

      - name: Publish to Google Registry
        run: |-
          docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

      # Set up kustomize
      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize
      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: cd .. && cd k8s
        run: |-
          ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
          ./kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide
